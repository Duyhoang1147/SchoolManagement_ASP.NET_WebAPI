// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolManagerment_WebAPI.Data;

#nullable disable

namespace SchoolManagerment_WebAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SchoolManagerment_WebAPI.Model.Classroom", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Classrooms");
                });

            modelBuilder.Entity("SchoolManagerment_WebAPI.Model.TeacherClassroom", b =>
                {
                    b.Property<Guid>("TeacherId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClassroomId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TeacherId", "ClassroomId");

                    b.HasIndex("ClassroomId");

                    b.ToTable("TeacherClassrooms");
                });

            modelBuilder.Entity("SchoolManagerment_WebAPI.Model.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("SchoolManagerment_WebAPI.Model.Student", b =>
                {
                    b.HasBaseType("SchoolManagerment_WebAPI.Model.User");

                    b.Property<int>("SchoolYear")
                        .HasColumnType("int");

                    b.Property<Guid?>("Student_ClassroomId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("Student_ClassroomId");

                    b.ToTable("Students", (string)null);
                });

            modelBuilder.Entity("SchoolManagerment_WebAPI.Model.Teacher", b =>
                {
                    b.HasBaseType("SchoolManagerment_WebAPI.Model.User");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.ToTable("Teachers", (string)null);
                });

            modelBuilder.Entity("SchoolManagerment_WebAPI.Model.TeacherClassroom", b =>
                {
                    b.HasOne("SchoolManagerment_WebAPI.Model.Classroom", "Classroom")
                        .WithMany("TeacherClassrooms")
                        .HasForeignKey("ClassroomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolManagerment_WebAPI.Model.Teacher", "Teacher")
                        .WithMany("TeacherClassrooms")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classroom");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("SchoolManagerment_WebAPI.Model.Student", b =>
                {
                    b.HasOne("SchoolManagerment_WebAPI.Model.Classroom", "Student_Classroom")
                        .WithMany("Students")
                        .HasForeignKey("Student_ClassroomId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Student_Classroom");
                });

            modelBuilder.Entity("SchoolManagerment_WebAPI.Model.Classroom", b =>
                {
                    b.Navigation("Students");

                    b.Navigation("TeacherClassrooms");
                });

            modelBuilder.Entity("SchoolManagerment_WebAPI.Model.Teacher", b =>
                {
                    b.Navigation("TeacherClassrooms");
                });
#pragma warning restore 612, 618
        }
    }
}
